@model IncidentDataVM

@using Kendo.Mvc.UI
@using System.Globalization
@{
    ViewData["Title"] = "Home Page";
}
<script type="text/javascript">
    //set culture of the Kendo UI
    kendo.culture("de-DE");
</script>

@{
    CultureInfo.DefaultThreadCurrentCulture = new CultureInfo("de-DE");
}
<div class="shadow-lg">
    @*<h1 class="display-4">Welcome</h1>*@
    @*<p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>*@

    <div class="row">
        <div class="col-md-12">
            <p class="border">
                Near Hit: an unplanned event which in slightly different circumstances could have resulted in injury or damage to property or the environment (e.g. slammed on the brakes to avoid hitting the deer, slipped on ice but did not fall). &nbsp;
                Safe Observation/Act: a person performing an action to generate awareness of an unsafe condition or control/remove a health, safety, environmental or security unsafe condition (i.e. hazard or risk); it may be self-reported or reported by a witness of the Safe Act (e.g. observed worker mopping up a wet area on the tile floor to reduce slipping potential, tied up my shoe laces when I noticed they had become undone).&nbsp;
                Incident Notification: all other types of incidents (e.g. first aid incidents where professional medical assistance was not necessary, vehicle damage, medical assistance). You will be contacted by a Safety Representative to fill out an Incident form for this type of classification.&nbsp;
                Safety 24/7: same as any of the reports above, but happens during non-working hours.
            </p>
        </div>
    </div>
    <div class="demo-section k-content" style="padding:20px">

        <div class="form-group">
            <h4>Select Client</h4>

            @(Html.Kendo().DropDownList()
      .Name("client")
       .OptionLabel("Select Client...")
        .DataValueField("id")
      .DataTextField("clientCompanyName")

      .DataSource(source =>
      {
          source.Read(read =>
          {
              read.Action("GetClient", "Home");
          });
      })
      .HtmlAttributes(new { style = "width: 100%" })
    )
        </div>
        <div class="form-group">
            <label>Type</label>

            @(Html.Kendo().DropDownList()
      .Name("incidenttype")
       .OptionLabel("Select incident types...")
        .DataValueField("id")
      .DataTextField("incidentTypeName")

      .DataSource(source =>
      {
          source.Read(read =>
          {
              read.Action("GetIncident_Type", "Home");
          });
      })
      .HtmlAttributes(new { style = "width: 100%" })
    )
        </div>
        <div class="form-group">
            <label for="iDate">Date</label>
            @(Html.Kendo().DateInput()
      .Name("dateinput")
      .Value(DateTime.UtcNow)
       .HtmlAttributes(new { style = "width: 100%" })
    )
        </div>
        <div class="form-group">
            <label for="iTime">Time</label>
            @(Html.Kendo().TimePicker()
      .Name("timeinput")
      .Value(DateTime.UtcNow)
             .HtmlAttributes(new { style = "width: 100%" })
    )

        </div>

        <div class="form-group">
            <label for="iPnum">Project Number</label>

            @(Html.Kendo().DropDownList()
        .Name("project")
         .HtmlAttributes(new { style = "width: 100%" })
        .OptionLabel("Select Project...")
        .DataValueField("id")
        .DataTextField("projectName")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetProjects", "Home")
                 .Data("filterProjects");
            })
             .ServerFiltering(true);
        })

     .Enable(false)
    .AutoBind(false)
     .CascadeFrom("client")
    )
        </div>
        <div class="form-group">
            <label for="country">Country</label>

            @(Html.Kendo().DropDownList()
      .Name("country")
       .OptionLabel("Select Country...")
        .DataValueField("id")
      .DataTextField("countryName")

      .DataSource(source =>
      {
          source.Read(read =>
          {
              read.Action("GetCountry", "Home");
          });
      })
      .HtmlAttributes(new { style = "width: 100%" })
    )
        </div>
        <div class="form-group">
            <label for="iState">State/Province</label>

            @(Html.Kendo().DropDownList()
        .Name("state")
         .HtmlAttributes(new { style = "width: 100%" })
        .OptionLabel("Select State...")
        .DataValueField("id")
        .DataTextField("stateProvinceName")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetStates", "Home")
                 .Data("filterStates"); 
            })
               .ServerFiltering(true);
        })

           .Enable(false)
           .AutoBind(false)
          .CascadeFrom("country")
    )
        </div>
        <div>
            <label for="iLocation">Location</label>
            <ul class="fieldlist">
                <li>
                    @(Html.Kendo().RadioButton().Name("Field").Value("1").Checked(true).HtmlAttributes(new { @name = "loc" }).Label("Field"))
                </li>
                <li>
                    @(Html.Kendo().RadioButton().Name("Office").Value("2").HtmlAttributes(new { @name = "loc" }).Label("Office"))
                </li>

            </ul>
        </div>
        <br>

        <div class="form-group">
            <label for="iEmployee">Employee Name</label>
            <input type="text" class="form-control" id="employee" value="@ViewBag.Name" />
            <input type="hidden" class="form-control" id="firstname" value="@ViewBag.FirstName" />
            <input type="hidden" class="form-control" id="lastname" value="@ViewBag.LastName" />
        </div>
        <div class="form-group">
            <label for="iEmail">Employee Email</label>
            <input type="email" class="form-control" id="email" value="@ViewBag.Email"/>
        </div>
        <div class="form-group">
            <label for="iCompany">Company Name</label>
            <input type="text" class="form-control" id="company" />
        </div>
        <div class="form-group">
            <label for="iDescription">Incident Description</label>
            <textarea class="form-control" id="description"></textarea>
        </div>
        <div class="form-group">
            <label for="iAction">Action Taken</label>
            <textarea class="form-control" id="action"></textarea>
        </div>

        <button type="button" id="submitBtn" class="k-button k-primary" onclick="BlankTemplate()">Submit</button>

      
     
        <br />
    </div>
</div>
@section scripts {
    <script>
        function filterStates() {
            return {
                country: $("#country").val()
            };
        }
        function filterProjects() {
            return {
                client: $("#client").val()
            };
        }
        
       

        BlankTemplate = function () {
            var formData = 
            {
                ClientId: $("#client").val(),
                IncidentTypeId: $("#incidenttype").val(),
                DateTimeIncidentUtc: $("#dateinput").val(),
               // timeinput: $("#timeinput").val(),
                ProjectId: $("#project").val(),
                CountryId: $("#country").val(),
                StateId: $("#state").val(),
                LocationId: $("#loc").val(),
                ReporterCompanyName: $("#company").val(),
                Description: $("#description").val(),
                ActionTaken: $("#action").val(),
                Email: $("#email").val()
            }
                $.ajax({
                    url: "Home/Submit",
                    data: formData,
                    type: "POST"
                });
            }
    
    </script>
}
<style>
    .k-readonly {
        color: gray;
    }

    .fieldlist {
        margin: 0 0 -1em;
        padding: 0;
    }

    .fieldlist li {
        list-style: none;
        padding-bottom: 1em;
    }
</style>
